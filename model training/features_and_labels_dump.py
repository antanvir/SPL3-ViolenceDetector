# -*- coding: utf-8 -*-
"""features_and_labels_dump.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Ki2bperOWDgsYSJAF83bjyAMWnqmWV9I
"""

from google.colab import drive
drive.mount('/content/drive')
# drive.mount('/content/drive', force_remount=True)

import os
import cv2

# def sayHi(name):
#     return "Hello " + name
# print(sayHi("Tanvir"))


# Fight label 1, noFight label 0
frame_paths_and_type = [ ( "/content/drive/My Drive/_SPL3/Dataframes/validationDataset/movie-fight/fights/", 1 ),
               ( "/content/drive/My Drive/_SPL3/Dataframes/validationDataset/movie-fight/noFights/", 0 )]

dataset=[]

# Taking 10 neighbour video frames as sequence
def load_images_from_folder(folder, classLabel):  
    image_sequence = []
    counter = 1 
    for filename in os.listdir(folder):
        img = cv2.imread(os.path.join(folder, filename))
        resized_img = cv2.resize(img, (100,100))
        if img is not None :
            image_sequence.append(resized_img)
        if (counter % 10) == 0:
            dataset.append([image_sequence, classLabel])
            image_sequence = []
        if (counter % 30) == 0:
            print("x ", end=" ")
        if (counter % 300) == 0:
            print()
        counter = counter + 1
    # if len(image_sequence) != 0:
    #     dataset.append([image_sequence, classLabel])
    #     image_sequence = []


for folder_info in frame_paths_and_type:
    load_images_from_folder(folder_info[0], folder_info[1])
    print("=== Folder Done ===")

print(len(dataset))

import random
import pickle
import numpy as np

random.shuffle(dataset)
for samples in dataset[0:15]:
    print(samples[1])

x = []
y = []
for image, label in dataset:
    x.append(image)
    y.append(label)

x = np.array(x).reshape(-1, 10, 100, 100, 3)
print(x.shape)

# saving dataset & corresponding class label with pickle
pickle_write_x = open("/content/drive/My Drive/_SPL3/model/x_movie_validation.pickle", "wb")
pickle.dump(x, pickle_write_x)
pickle_write_x.close()


pickle_write_y = open("/content/drive/My Drive/_SPL3/model/y_movie_validation.pickle", "wb")
pickle.dump(y, pickle_write_y)
pickle_write_y.close()